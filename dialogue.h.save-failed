#ifndef DIALOGUE_H_INCLUDED
#define DIALOGUE_H_INCLUDED


#include <string>
#include <vector>
#include <iostream>

//The game is exprressed through dialogue
//The game will present information and choices for the player to choose a valid choice
//This will loop until they do so

class Dialogue
{
private:
//Piece of information that the dialogue displays
	std::string description;
//A vector of choices will be shown
//the dialogue automatically numbers the choices
	std::vector<std::string>choices;


public:
	//Runs the dialogue
	int activate()
	{
		//Output of information
		std::cout<<description <<std::endl;

		//Output of choices
		for(int i = 0; i < this->choices.size(); ++i)
		{
			std::cout<<i+1 << ": " << this->choices[i] <<std::endl;
		}

		int userInput =-1;
		//Read input from player until valid option is picked
		while(true)
		{
			std::cin >> userInput;
			//'Valid' means withing the range of numbers outputted
			if(userInput >= 0 && userInput <= choices.size())
			{
				return userInput;
			}
		}
		return 0;
	}
	Dialogue(std::string description, std::vector<std::string>choices)
	{
		this->description = description;
		this->choices = choices;
	}


	Dialogue()
	{
	}

	void dialogue_menu(Creature& player)
	{
	    //Output the menu
	    int result = Dialogue("Menu\n====",{"Items","Equipment","Character"}).activate();

	    return;

	    switch(result)
	    {
	        //Print the items the player owns
        case 1:
            std::cout <<"Items\n=====\n";
            player.inventory.print();
            std:cout << "---------------\n"
            break;
	    }
	    //Print the equipment that the player is wearing (if they are
        //wearing anything) and then ask if hey want to equip a weapon
        //or some armor
        case 2:
            {
                std::cout << "Equipment\n=========\n";
                std::cout << "Head: "
                << (player.equippedArmor[Armor::Slot::HEAD] != nullptr ?
                    player.equippedArmor[Armor::Slot::HEAD]->name : "Nothing")
                    <<std::endl;
                std::cout << "Torso: "
                << (player.equippedArmor[Armor::Slot::TORSO] != nullptr ?
                    player.equippedArmor[Armor::Slot::TORSO]->name : "Nothing")
                    <<std::endl;
                std::cout << "Legs: "
                << (player.equippedArmor[Armor::Slot::LEGS] != nullptr ?
                    player.equippedArmor[Armor::Slot::LEGS]->name : "Nothing")
                    <<std::endl;
                std::cout << "Weapon: "
                <<  (player.equippedWeapon != nullptr  ?
                    player.equippedWeapon->name "Nothing")
                << std::endl;
            }

	}



};

#endif /* DIALOGUE_HPP */
